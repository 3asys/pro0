package main

import (
	"html/template"
	"net/http"
	"os"
)

var tpl = template.Must(template.ParseFiles("index.html"))

func indexHandler(w http.ResponseWriter, r *http.Request) {
	// параметр w — это структура, которую мы используем для отправки ответов на HTTP-запрос.
	// она реализует метод Write(), который принимает слайс байтов
	// и записывает объединенные данные как часть HTTP-ответа.
	// параметр r представляет HTTP-запрос, полученный от клиента.
	// это то, как мы получаем доступ к данным, отправляемым веб-браузером на сервере.
	tpl.Execute(w, nil)
}

func main() {
	port := os.Getenv("PORT")
	if port == "" {
		port = "3000"
	}

	mux := http.NewServeMux() //создает новый мультиплексор HTTP-запросов и присваивает его переменной mux
	// мультиплексор запросов сопоставляет URL-адрес входящих запросов со списком зарегистрированных путей и вызывает соответствующий обработчик для пути всякий раз, когда найдено совпадение

	mux.HandleFunc("/", indexHandler)  // indexHandler - функция-обработчик для корневого пути "/"
	http.ListenAndServe(":"+port, mux) // метод запускает сервер на порту 3000, если порт не установлен окружением
}
